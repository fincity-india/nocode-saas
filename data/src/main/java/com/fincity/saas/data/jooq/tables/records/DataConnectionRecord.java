/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.data.jooq.tables.records;


import com.fincity.saas.data.jooq.enums.DataConnectionDbType;
import com.fincity.saas.data.jooq.tables.DataConnection;

import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataConnectionRecord extends UpdatableRecordImpl<DataConnectionRecord> implements Record10<ULong, String, String, DataConnectionDbType, Map, UByte, ULong, LocalDateTime, ULong, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.data_connection.ID</code>. Primary key
     */
    public DataConnectionRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>data.data_connection.CLIENT_CODE</code>. Client code
     */
    public DataConnectionRecord setClientCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.CLIENT_CODE</code>. Client code
     */
    public String getClientCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data.data_connection.DB_NAME</code>. Name of the
     * database
     */
    public DataConnectionRecord setDbName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.DB_NAME</code>. Name of the
     * database
     */
    public String getDbName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data.data_connection.DB_TYPE</code>. Data base type to
     * store the data
     */
    public DataConnectionRecord setDbType(DataConnectionDbType value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.DB_TYPE</code>. Data base type to
     * store the data
     */
    public DataConnectionDbType getDbType() {
        return (DataConnectionDbType) get(3);
    }

    /**
     * Setter for <code>data.data_connection.DB_CONNECTION</code>. JSON
     * connection details
     */
    public DataConnectionRecord setDbConnection(Map value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.DB_CONNECTION</code>. JSON
     * connection details
     */
    public Map getDbConnection() {
        return (Map) get(4);
    }

    /**
     * Setter for <code>data.data_connection.DEFAULT_DB</code>. Default db
     * connection for all the data
     */
    public DataConnectionRecord setDefaultDb(UByte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.DEFAULT_DB</code>. Default db
     * connection for all the data
     */
    public UByte getDefaultDb() {
        return (UByte) get(5);
    }

    /**
     * Setter for <code>data.data_connection.CREATED_BY</code>. ID of the user
     * who created this row
     */
    public DataConnectionRecord setCreatedBy(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.CREATED_BY</code>. ID of the user
     * who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>data.data_connection.CREATED_AT</code>. Time when this
     * row is created
     */
    public DataConnectionRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.CREATED_AT</code>. Time when this
     * row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>data.data_connection.UPDATED_BY</code>. ID of the user
     * who updated this row
     */
    public DataConnectionRecord setUpdatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.UPDATED_BY</code>. ID of the user
     * who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>data.data_connection.UPDATED_AT</code>. Time when this
     * row is updated
     */
    public DataConnectionRecord setUpdatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>data.data_connection.UPDATED_AT</code>. Time when this
     * row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, String, String, DataConnectionDbType, Map, UByte, ULong, LocalDateTime, ULong, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, String, String, DataConnectionDbType, Map, UByte, ULong, LocalDateTime, ULong, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return DataConnection.DATA_CONNECTION.ID;
    }

    @Override
    public Field<String> field2() {
        return DataConnection.DATA_CONNECTION.CLIENT_CODE;
    }

    @Override
    public Field<String> field3() {
        return DataConnection.DATA_CONNECTION.DB_NAME;
    }

    @Override
    public Field<DataConnectionDbType> field4() {
        return DataConnection.DATA_CONNECTION.DB_TYPE;
    }

    @Override
    public Field<Map> field5() {
        return DataConnection.DATA_CONNECTION.DB_CONNECTION;
    }

    @Override
    public Field<UByte> field6() {
        return DataConnection.DATA_CONNECTION.DEFAULT_DB;
    }

    @Override
    public Field<ULong> field7() {
        return DataConnection.DATA_CONNECTION.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return DataConnection.DATA_CONNECTION.CREATED_AT;
    }

    @Override
    public Field<ULong> field9() {
        return DataConnection.DATA_CONNECTION.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return DataConnection.DATA_CONNECTION.UPDATED_AT;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getClientCode();
    }

    @Override
    public String component3() {
        return getDbName();
    }

    @Override
    public DataConnectionDbType component4() {
        return getDbType();
    }

    @Override
    public Map component5() {
        return getDbConnection();
    }

    @Override
    public UByte component6() {
        return getDefaultDb();
    }

    @Override
    public ULong component7() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public ULong component9() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getClientCode();
    }

    @Override
    public String value3() {
        return getDbName();
    }

    @Override
    public DataConnectionDbType value4() {
        return getDbType();
    }

    @Override
    public Map value5() {
        return getDbConnection();
    }

    @Override
    public UByte value6() {
        return getDefaultDb();
    }

    @Override
    public ULong value7() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public ULong value9() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public DataConnectionRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public DataConnectionRecord value2(String value) {
        setClientCode(value);
        return this;
    }

    @Override
    public DataConnectionRecord value3(String value) {
        setDbName(value);
        return this;
    }

    @Override
    public DataConnectionRecord value4(DataConnectionDbType value) {
        setDbType(value);
        return this;
    }

    @Override
    public DataConnectionRecord value5(Map value) {
        setDbConnection(value);
        return this;
    }

    @Override
    public DataConnectionRecord value6(UByte value) {
        setDefaultDb(value);
        return this;
    }

    @Override
    public DataConnectionRecord value7(ULong value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DataConnectionRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public DataConnectionRecord value9(ULong value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public DataConnectionRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public DataConnectionRecord values(ULong value1, String value2, String value3, DataConnectionDbType value4, Map value5, UByte value6, ULong value7, LocalDateTime value8, ULong value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataConnectionRecord
     */
    public DataConnectionRecord() {
        super(DataConnection.DATA_CONNECTION);
    }

    /**
     * Create a detached, initialised DataConnectionRecord
     */
    public DataConnectionRecord(ULong id, String clientCode, String dbName, DataConnectionDbType dbType, Map dbConnection, UByte defaultDb, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(DataConnection.DATA_CONNECTION);

        setId(id);
        setClientCode(clientCode);
        setDbName(dbName);
        setDbType(dbType);
        setDbConnection(dbConnection);
        setDefaultDb(defaultDb);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
    }
}
