/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.tables.SecurityUserRolePermission;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecurityUserRolePermissionRecord extends UpdatableRecordImpl<SecurityUserRolePermissionRecord> implements Record4<ULong, ULong, ULong, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_user_role_permission.ID</code>.
     * Primary key
     */
    public SecurityUserRolePermissionRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_role_permission.ID</code>.
     * Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_user_role_permission.USER_ID</code>.
     * User ID
     */
    public SecurityUserRolePermissionRecord setUserId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_role_permission.USER_ID</code>.
     * User ID
     */
    public ULong getUserId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_user_role_permission.ROLE_ID</code>.
     * Role ID
     */
    public SecurityUserRolePermissionRecord setRoleId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_role_permission.ROLE_ID</code>.
     * Role ID
     */
    public ULong getRoleId() {
        return (ULong) get(2);
    }

    /**
     * Setter for
     * <code>security.security_user_role_permission.PERMISSION_ID</code>.
     * Permission ID
     */
    public SecurityUserRolePermissionRecord setPermissionId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_user_role_permission.PERMISSION_ID</code>.
     * Permission ID
     */
    public ULong getPermissionId() {
        return (ULong) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<ULong, ULong, ULong, ULong> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<ULong, ULong, ULong, ULong> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION.ID;
    }

    @Override
    public Field<ULong> field2() {
        return SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION.USER_ID;
    }

    @Override
    public Field<ULong> field3() {
        return SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION.ROLE_ID;
    }

    @Override
    public Field<ULong> field4() {
        return SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION.PERMISSION_ID;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public ULong component2() {
        return getUserId();
    }

    @Override
    public ULong component3() {
        return getRoleId();
    }

    @Override
    public ULong component4() {
        return getPermissionId();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public ULong value2() {
        return getUserId();
    }

    @Override
    public ULong value3() {
        return getRoleId();
    }

    @Override
    public ULong value4() {
        return getPermissionId();
    }

    @Override
    public SecurityUserRolePermissionRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public SecurityUserRolePermissionRecord value2(ULong value) {
        setUserId(value);
        return this;
    }

    @Override
    public SecurityUserRolePermissionRecord value3(ULong value) {
        setRoleId(value);
        return this;
    }

    @Override
    public SecurityUserRolePermissionRecord value4(ULong value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public SecurityUserRolePermissionRecord values(ULong value1, ULong value2, ULong value3, ULong value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityUserRolePermissionRecord
     */
    public SecurityUserRolePermissionRecord() {
        super(SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION);
    }

    /**
     * Create a detached, initialised SecurityUserRolePermissionRecord
     */
    public SecurityUserRolePermissionRecord(ULong id, ULong userId, ULong roleId, ULong permissionId) {
        super(SecurityUserRolePermission.SECURITY_USER_ROLE_PERMISSION);

        setId(id);
        setUserId(userId);
        setRoleId(roleId);
        setPermissionId(permissionId);
    }
}
